name: Autoupdate

on:
 workflow_dispatch:
 schedule:
   - cron: "0 0 * * 0"

defaults:
  run:
    shell:
      bash -el {0}

jobs:
  check_update:
    name: Check if newer version exists
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Set up Conda env
        uses: mamba-org/setup-micromamba@8767fb704bd78032e9392f0386bf46950bdd1194
        with:
          environment-file: environment.yml
          environment-name: check-env
      - name: Find latest version
        id: versions
        run: |
          pkgname="$(yq '.dependencies[0]' environment.yml | grep -Eio '[a-z0-9_-]+' | head -n 1)"
          old_version=$(micromamba list -n check-env "$pkgname" --json | jq -r '.[0].version')
          micromamba update -y -n check-env -a
          new_version=$(micromamba list -n check-env "$pkgname" --json | jq -r '.[0].version')
          if [[ "$new_version" != "$old_version" ]]; then
            sed -i "s/$old_version/$new_version/g" environment.yml
            echo "pkgname=$pkgname" >> $GITHUB_OUTPUT
            echo "new-version=$new_version" >> $GITHUB_OUTPUT
          fi
      - uses: peter-evans/create-pull-request@b1ddad2c994a25fbc81a28b3ec0e368bb2021c50
        if: steps.versions.outputs.pkgname
        with:
          commit-message: "Update ${{ steps.versions.outputs.pkgname }} to ${{ steps.versions.outputs.new-version }}"
          title: "Update ${{ steps.versions.outputs.pkgname }} to ${{ steps.versions.outputs.new-version }}"
          body: |
            A new release of ${{ steps.versions.outputs.pkgname }} was detected on conda-forge.

            This PR updates ${{ steps.versions.outputs.pkgname }} to version ${{ steps.versions.outputs.new-version }} and will push a tag on merge automatically.
          branch: v${{ steps.versions.outputs.new-version }}
          delete-branch: true
